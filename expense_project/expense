#! /usr/bin/env ruby

require 'pg'

class ExpenseData
  def initialize
    @connection = PG.connect(dbname: 'expense')
  end

  def list_expenses()
    result = @connection.exec('SELECT * FROM expenses;')

    result.each do |row|
      columns = [
        row['id'].rjust(3),
        row['created_on'].rjust(26),
        row['amount'].rjust(8),
        row['memo'],
      ]
      puts columns.join(' | ')
    end
  end

  def add_expense(amount, memo)
    sql = 'INSERT INTO expenses (amount, memo) VALUES ($1, $2)'
    @connection.exec_params(sql, [amount, memo])
  end
end

class CLI
  def initialize
    @expense_data = ExpenseData.new
  end

  def display_help()
    help_text = <<~HELP
    An expense recording system

    Commands:

    add AMOUNT MEMO - record a new expense
    clear - delete all expenses
    list - list all expenses
    delete NUMBER - remove expense with id NUMBER
    search QUERY - list expenses with a matching memo field
    HELP
    puts help_text
  end

  def run(args = ARGV)
    # Parameter Handling: reads args from command line
    command = args.shift
    case command
    when 'list'
      @expense_data.list_expenses
    when 'add'
      abort 'You must provide an amount and memo.' unless (args[1] && args[2])
      @expense_data.add_expense(args[1], args[2])
    else
      display_help
    end
  end
end

CLI.new.run
